

class Solution
{
    //Function to find the length of longest common subsequence in two strings.
    static int lcs(int x, int y, String s1, String s2)
    {
        // your code here
        // if(s1.length()==0 || s2.length()==0){
        //     return 0;
        // }
        // if(s1.charAt(0)==s2.charAt(0)){
        //     return 1+lcs(x-1,y-1,s1.substring(1),s2.substring(1));
        // }else{
        //     return Math.max(lcs(x-1,y-1,s1.substring(1),s2.substring(1)),Math.max(lcs(x,y-1,s1,s2.substring(1)),lcs(x-1,y,s1.substring(1),s2)));
        // }
        int[][] ans=new int[y+1][x+1];
        // for(int j=0;j<=x;j++){
        //     ans[0][j]=0;
        // }
        // for(int i=0;i<=y;i++){
        //     ans[i][0]=0;
        // }
        for(int i=1;i<=y;i++){
            for(int j=1;j<=x;j++){
                if(i==0 || j==0){
                    ans[i][j]=0;
                }
                if(s1.charAt(j-1)==s2.charAt(i-1)){
                    ans[i][j]=ans[i-1][j-1]+1;
                }else{
                    ans[i][j]=Math.max(ans[i-1][j],ans[i][j-1]);
                }
            }
        }
        return ans[y][x];
    }
    
}
