/* 
class Node
{
    int data;
    Node left, right;

    Node(int item)
    {
        data = item;
        left = right = null;
    }
}
*/

class Tree
{
 public ArrayList<Integer> reverseLevelOrder(Node node) 
    {
        // code here
        Queue<Node> q=new LinkedList<>();
        ArrayList<Integer> ans=new ArrayList<>();
        Stack<Integer> st=new Stack<>();
        
        q.add(node);
        while(!q.isEmpty()){
            Node temp=q.remove();
          st.add(temp.data);
          if(temp.right!=null){
              q.add(temp.right);
          }
          if(temp.left!=null){
              q.add(temp.left);
          }
            
        }
        while(!st.isEmpty()){
            ans.add(st.pop());
        }
        return ans;
    }
}      
