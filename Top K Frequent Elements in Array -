class Solution {
    public int[] topK(int[] nums, int k) {
        // Create a frequency map to store the count of each element
        Map<Integer, Integer> frequencyMap = new HashMap<>();
        for (int num : nums) {
            frequencyMap.put(num, frequencyMap.getOrDefault(num, 0) + 1);
        }

        // Create a list of unique elements
        List<Integer> uniqueElements = new ArrayList<>(frequencyMap.keySet());

        // Sort the unique elements based on frequency and element value
        uniqueElements.sort((a, b) -> {
            int freqCompare = frequencyMap.get(b).compareTo(frequencyMap.get(a));
            if (freqCompare != 0) {
                return freqCompare;
            }
            return Integer.compare(b, a);
        });

        // Return the top k elements
        return uniqueElements.subList(0, k).stream().mapToInt(Integer::intValue).toArray();
    }
}
