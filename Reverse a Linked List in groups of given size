

/*node class of the linked list

class Node
{
    int data;
    Node next;
    Node(int key)
    {
        data = key;
        next = null;
    }
}

*/

class Solution
{
    public static Node reverse(Node node, int k)
    {
        //Your code here
         Node current = node;
        Node prevTail = null;
        boolean isFirstGroup = true;

        while (current != null) {
            int count = 0;
            Node groupHead = current;
            Node prev = null;
            
            // Reverse the current group of size k
            while (current != null && count < k) {
                Node nextNode = current.next;
                current.next = prev;
                prev = current;
                current = nextNode;
                count++;
            }
            if (isFirstGroup) {
                node = prev;
                isFirstGroup = false;
            }

            // Connect the reversed group to the previous tail (if any)
            if (prevTail != null) {
                prevTail.next = prev;
            }

            // Update the previous tail to the current tail of the reversed group
            prevTail = groupHead;
        }

        return node;
    }
}
