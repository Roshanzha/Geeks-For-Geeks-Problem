



class Solution {
    //Function to find length of longest increasing subsequence.
    static int longestSubsequence (int n, int[] nums) {
        List<Integer> list = new ArrayList<>();
        list.add(nums[0]);
        
        for (int i = 1; i < n; i++) {
            if (nums[i] > list.get(list.size() - 1)) {
                list.add(nums[i]);
            } else {
                int low = 0;
                int high = list.size() - 1;
                while (low <= high) {
                    int mid = (high + low) / 2;
                    if (list.get(mid) < nums[i]) {
                        low = mid + 1;
                    } else {
                        high = mid - 1;
                    }
                }
                list.set(low, nums[i]);
            }
        }
        return list.size();
    }
}
